{"ast":null,"code":"import React,{useState,useEffect}from'react';import{ReactComponent as ArrowLeft}from'../assets/arrow-left.svg';import{useParams,Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const NotePage=()=>{const{noteid}=useParams();console.log(noteid);let[note,setNote]=useState(null);console.log(note);useEffect(()=>{getNote();},[noteid]);let getNote=async()=>{if(noteid==='new')return;let response=await fetch('/api/notes/'+noteid);let data=await response.json();console.log('DATA:',data);setNote(data);};let createNote=async()=>{fetch('/api/notes/create/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(note)});};let updateNote=async()=>{fetch('/api/notes/'+noteid+'/update/',{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(note)});};let deleteNote=async()=>{fetch('/api/notes/'+noteid+'/delete/',{method:'DELETE',headers:{'Content-Type':'application/json'}});};let handlesubmit=()=>{if(noteid!=='new'&&!note.body){deleteNote();}else if(noteid!=='new'){updateNote();}else if(noteid==='new'&&note.body!==null){createNote();}console.log('note submitted');};return/*#__PURE__*/_jsxs(\"div\",{className:\"note\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"note-header\",children:[/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(ArrowLeft,{onClick:handlesubmit})})}),noteid!=='new'?/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"button\",{onClick:deleteNote,children:\"Delete\"})}):/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handlesubmit,children:\"Save\"})})]}),/*#__PURE__*/_jsx(\"textarea\",{onChange:e=>{setNote({...note,'body':e.target.value});},defaultValue:note===null||note===void 0?void 0:note.body})]});};export default NotePage;","map":{"version":3,"names":["React","useState","useEffect","ReactComponent","ArrowLeft","useParams","Link","jsx","_jsx","jsxs","_jsxs","NotePage","noteid","console","log","note","setNote","getNote","response","fetch","data","json","createNote","method","headers","body","JSON","stringify","updateNote","deleteNote","handlesubmit","className","children","to","onClick","onChange","e","target","value","defaultValue"],"sources":["C:/Users/milad/OneDrive/Desktop/django and react/react inside django/django api/mynotes/frontend/src/pages/NotePage.js"],"sourcesContent":["import React, {useState,useEffect} from 'react'\r\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\r\n\r\nimport {  useParams,Link } from 'react-router-dom';\r\n\r\n\r\nconst NotePage = () => {\r\n\r\n    const { noteid } = useParams();\r\n\r\n    console.log(noteid)\r\n\r\n\r\n    let [note, setNote] = useState(null)\r\n\r\n    console.log(note)\r\n\r\n    useEffect(() => {\r\n        getNote()\r\n    }, [noteid]);\r\n\r\n    let getNote = async () => {\r\n        if (noteid === 'new') return;\r\n\r\n        let response = await fetch('/api/notes/'+noteid)\r\n        let data = await response.json()\r\n        console.log( 'DATA:', data)\r\n        setNote(data)\r\n    }\r\n\r\n\r\n    let createNote = async () => {\r\n        fetch('/api/notes/create/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(note)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    let updateNote = async () => {\r\n        fetch('/api/notes/'+noteid+'/update/', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(note)\r\n        })\r\n    }\r\n\r\n    let deleteNote = async () => {\r\n        fetch('/api/notes/'+noteid+'/delete/', {\r\n            method: 'DELETE',\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        }\r\n                    })\r\n    }\r\n\r\n    let handlesubmit = () => {\r\n        if (noteid !== 'new' && !note.body) {\r\n            deleteNote()\r\n        }\r\n        else if (noteid !== 'new') {\r\n            updateNote()\r\n        }\r\n        else if(noteid === 'new' && note.body !== null) {\r\n            createNote()\r\n        }\r\n        console.log('note submitted')\r\n\r\n    }\r\n\r\n  return (\r\n    <div className='note'>\r\n      <div className='note-header'>\r\n        <Link to='/'>\r\n            <h3>\r\n                <ArrowLeft onClick={handlesubmit}/>\r\n            </h3>\r\n            \r\n        </Link>\r\n        {noteid !== 'new' \r\n        ? \r\n        (\r\n            <Link to='/'>\r\n                 <button onClick={deleteNote}>Delete</button>\r\n            </Link>\r\n        )\r\n        :\r\n        (\r\n            <Link to='/'>\r\n                 <button onClick={handlesubmit}>Save</button>\r\n            </Link>\r\n        )\r\n        }\r\n\r\n              \r\n      </div>\r\n      <textarea onChange={(e) => {setNote({...note, 'body':e.target.value})}} defaultValue={note?.body} ></textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotePage\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}